------------------------------
--// Dependencies & Setup //--
------------------------------

local repo = 'https://raw.githubusercontent.com/violin-suzutsuki/LinoriaLib/main/'

local Library = loadstring(game:HttpGet(repo .. 'Library.lua'))()
local ThemeManager = loadstring(game:HttpGet(repo .. 'addons/ThemeManager.lua'))()
local SaveManager = loadstring(game:HttpGet(repo .. 'addons/SaveManager.lua'))()

local RP = game:GetService("ReplicatedStorage")
local remote = RP.Shared.Framework.Network.Remote.Event

------------------------------
--// UI Window Creation //--
------------------------------

local Window = Library:CreateWindow({
    Title = "Hiko's Chairs",
    Center = true,
    AutoShow = true,
    TabPadding = 10,
    MenuFadeTime = 0.2
})

local Tabs = {
    Main = Window:AddTab('Main'),
    ['UI Settings'] = Window:AddTab('UI Settings'),
}

local LeftGroupBox = Tabs.Main:AddLeftGroupbox('Auto Farm Tab')

------------------------------
--// Auto Bubble Feature //--
------------------------------

_G.EnableSell = false
_G.EnableAutFarm = false

LeftGroupBox:AddToggle('BubbleToggle', {
    Text = 'Auto Bubble',
    Default = false,
    Tooltip = 'Enable Auto Bubble',
    
    Callback = function(enabled)
        _G.EnableAutFarm = enabled

        if enabled then
            spawn(function()
                while _G.EnableAutFarm do
                    pcall(function()
                        remote:FireServer('BlowBubble')
                    end)
                    wait(0.5)
                end
            end)
        end
    end
})

LeftGroupBox:AddToggle('SellToggle', {
    Text = 'Auto Sell',
    Default = false,
    Tooltip = 'Enable Auto Sell',
    
    Callback = function(enabled)
        _G.EnableSell = enabled

        if enabled then
            spawn(function()
                while _G.EnableSell do
                    pcall(function()
                        remote:FireServer('SellBubble')
                    end)
                    wait(0.5)
                end
            end)
        end
    end
})

------------------------------
--// UI Settings Tab //--
------------------------------

local MenuGroup = Tabs['UI Settings']:AddLeftGroupbox('Menu')

MenuGroup:AddButton('Unload', function()
    Library:Unload()
end)

MenuGroup:AddLabel('Menu bind'):AddKeyPicker('MenuKeybind', {
    Default = 'LeftControl',
    NoUI = true,
    Text = 'Menu keybind'
})

------------------------------
--// Theme & Config Setup //--
------------------------------

Library.ToggleKeybind = Options.MenuKeybind

ThemeManager:SetLibrary(Library)
SaveManager:SetLibrary(Library)

SaveManager:IgnoreThemeSettings()
SaveManager:SetIgnoreIndexes({ 'MenuKeybind' })

ThemeManager:SetFolder('MyScriptHub')
SaveManager:SetFolder('MyScriptHub/specific-game')

SaveManager:BuildConfigSection(Tabs['UI Settings'])
ThemeManager:ApplyToTab(Tabs['UI Settings'])

SaveManager:LoadAutoloadConfig()
